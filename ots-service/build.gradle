apply plugin: 'spring-boot'

buildscript {

    ext {
        springBootVersion = '1.1.9.RELEASE'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${project.springBootVersion}")
    }
}

task testJar(type: Jar) {
    classifier = 'tests'
    from sourceSets.test.output
}

test {
    dependsOn testJar

    exclude '**/*AcceptanceTest*'

    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}

artifacts {
    archives testJar
}

install {
    dependsOn build

    repositories.mavenInstaller {
        pom.project {
            parent {
                groupId 'org.springframework.boot'
                artifactId 'spring-boot-starter-parent'
                version "${project.springBootVersion}"
            }
        }
    }
}

dependencies {


    compile "org.springframework.boot:spring-boot-starter-web"
    compile 'org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE'

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile('junit:junit:4.12') {
        exclude group: 'org.hamcrest'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.google.guava:guava:18.0'
    testCompile 'com.jayway.restassured:rest-assured:2.4.0'
    testCompile 'com.jayway.jsonpath:json-path:1.2.0'

    provided 'org.projectlombok:lombok:1.14.8'
}


task downloadArtifacts(type: Exec) {

    commandLine "mvn"
    args "org.apache.maven.plugins:maven-dependency-plugin:2.9:get",
            "-DgroupId=${project.group}",
            "-DartifactId=${project.name}",
            "-Dversion=${project.version}",
            "-Dtransitive=false",
            "-Ddest=build"

}

task downloadTestArtifacts(type: Exec) {

    commandLine "mvn"
    args "org.apache.maven.plugins:maven-dependency-plugin:2.9:get",
            "-DgroupId=${project.group}",
            "-DartifactId=${project.name}",
            "-Dversion=${project.version}",
            "-Dclassifier=tests",
            "-Dtransitive=false",
            "-Ddest=build"

}


task acceptanceTest(type: Test) {
    // this task will be executed in isolation since all artifacts have been built and deployed
    dependsOn = []
    include '**/*AcceptanceTest*'
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
    outputs.upToDateWhen { false }//force to always rerun
}

dependencies {


    compile "org.springframework.boot:spring-boot-starter-web"
    compile 'org.springframework.hateoas:spring-hateoas:0.16.0.RELEASE'

    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile('junit:junit:4.12') {
        exclude group: 'org.hamcrest'
    }
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'com.google.guava:guava:18.0'
    testCompile 'com.jayway.restassured:rest-assured:2.4.0'
    testCompile 'com.jayway.jsonpath:json-path:1.2.0'

    provided 'org.projectlombok:lombok:1.14.8'
}